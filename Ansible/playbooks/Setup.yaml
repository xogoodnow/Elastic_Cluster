---
- name: setting up the basis for the cluster
  hosts: all
  become: true
  tasks:
    - name: Include variables
      include_vars:
        file: "{{ playbook_dir }}/vars/{{ item }}"
      with_items:
        - "all.yaml"

    - name: Setting the basis on all nodes
      include_role:
        name: "{{ item }}"
      with_items:
        - $PWD/roles/pre_setup
        - $PWD/roles/install_docker
        - $PWD/roles/node_exporter

    - name: Setting up the additional disks
      include_role:
        name: "{{ item }}"
      with_items:
        - $PWD/roles/elasticsearch_disk_partitioning
        - $PWD/roles/elasticsearch_disk_mount
      when: mode == 'elastic'

    - name: Tuning the nodes for Elasticsearch
      include_role:
        name: "{{ item }}"
      with_items:
        - $PWD/roles/elasticsearch_pre_setup
      when: mode == 'elastic'



    - name: Generate required certificates for Elasticsearch
      include_role:
        name: "{{ item }}"
      with_items:
        - $PWD/roles/elasticsearch_cert_generation
      when: mode == 'elastic' and init_cluster == 'true'


    - name: Set up the monitoring stack


      include_role:
        name: "{{ item }}"
      with_items:
        - $PWD/roles/victoria_metrics
      when: mode == 'monitoring'





- name: Setting up the Elastic cluster
  hosts: all
  become: true
  tasks:
    - name: Include variables
      include_vars:
        file: "{{ playbook_dir }}/vars/{{ item }}"
      with_items:
        - "all.yaml"

    - name: Setup and Configure Elastic instances
      include_role:
        name: "{{ item }}"
      with_items:
        - $PWD/roles/elasticsearch_cluster_deployment_dockerized
      when: mode == 'elastic'

    - name: Pause for 30 seconds before creating the users
      pause:
        seconds: 30

    - name: Change password for kibana_system
      uri:
        url: "https://{{ ansible_host }}:9200/_security/user/kibana_system/_password"
        method: POST
        user: "elastic"
        password: "{{ elastic_password }}"
        body: '{"password": "{{ kibana_password }}"}'
        body_format: json
        validate_certs: false
        force_basic_auth: true
        status_code: 200
        headers:
          Content-Type: "application/json"
      when: mode == 'elastic' and init_cluster == 'true'
      register: kibana_system_created

    - name: Set password for monitoring user
      uri:
        url: "https://{{ ansible_host }}:9200/_security/user/{{ monitoring_user }}"
        method: POST
        user: "elastic"
        password: "{{ elastic_password }}"
        body: '{"password": "{{ monitoring_password }}","roles" : [ "superuser" ]}'
        body_format: json
        validate_certs: false
        force_basic_auth: true
        status_code: 200
        headers:
          Content-Type: "application/json"
      when: mode == 'elastic' and init_cluster == 'true'
      register: monitoring_user_created

    - name: Print out the monitoring user info
      debug:
        var: monitoring_user_created

    - name: Print out the monitoring user info
      debug:
        var: kibana_system_created


    - name: Set up the elastic exporter
      include_role:
        name: "{{ item }}"
      with_items:
        - $PWD/roles/elasticsearch_deploy_exporter_dockerized
      when: mode == 'elastic'

- name: Backing up elastic
  hosts: all
  become: true
  serial: 1
  tasks:
    - name: Include variables
      include_vars:
        file: "{{ playbook_dir }}/vars/{{ item }}"
      with_items:
        - "all.yaml"

    - name: Enable snapshotting on elastic
      include_role:
        name: "{{ item }}"
      with_items:
        - $PWD/roles/Elastic_Snapshotting/elastic_enable_snapshotting
      when: mode == 'elastic'



- name: Setting up snapshotting on the cluster
  hosts: all
  become: true
  serial: 1
  tasks:
    - name: Include variables
      include_vars:
        file: "{{ playbook_dir }}/vars/{{ item }}"
      with_items:
        - "all.yaml"

    - name: Register snapshot repository on elastic
      include_role:
        name: "{{ item }}"
      with_items:
        - $PWD/roles/elastic_snapshotting/elastic_register_repository
      when: mode == 'elastic' and init_cluster == 'true'


    - name: Set SLM on elastic
      include_role:
        name: "{{ item }}"
      with_items:
        - $PWD/roles/elastic_snapshotting/elastic_slm
      when: mode == 'elastic' and init_cluster == 'true'
