---
- name: check connectivity
  ping:
    data: alive




- name: Pull the elastic image
  docker_image:
    name: "{{ ELASTIC_BASE_IMAGE }}:{{ ELASTIC_VERSION }}"
    source: pull


- name: Copy Instances file for bulk certificate generation
  template:
    src: files/instances.yaml
    dest: "{{ ELASTICSEARCH_BASE_DIRECTORY }}Elasticsearch/Config/Certs/instances.yaml"
    owner: root
    group: root
    mode: '0644'



- name: Run the elastic container for cert generation
  docker_container:
    name: "elastic_cert_generator"
    image: "{{ ELASTIC_BASE_IMAGE }}:{{ ELASTIC_VERSION }}"
    restart_policy: no
    state: started
    privileged: true
    network_mode: host
    volumes:
      - "{{ ELASTICSEARCH_BASE_DIRECTORY }}Elasticsearch/Config/Certs/instances.yaml:/usr/share/elasticsearch/instances.yaml"

- name: Sleep for 30s so the elastic would be ready
  pause:
    seconds: 30
    prompt: Waiting for elastic to be ready for requests


- name: Generate the ca
  community.docker.docker_container_exec:
    container: "elastic_cert_generator"
    command: bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip
  register: result_generate_ca


- name: Extract the ca
  community.docker.docker_container_exec:
    container: "elastic_cert_generator"
    command: unzip config/certs/ca.zip -d config/certs
  register: result_extract


- name: Generate the certificates
  community.docker.docker_container_exec:
    container: "elastic_cert_generator"
    command: bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in /usr/share/elasticsearch/instances.yaml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key
  register: result_generate


- name: Extract the certificates
  community.docker.docker_container_exec:
    container: "elastic_cert_generator"
    command: unzip config/certs/certs.zip -d config/certs
  register: result_extract_certificate


- name: Extract the certificates
  shell:
    cmd: "docker cp elastic_cert_generator:/usr/share/elasticsearch/config/certs {{ ELASTICSEARCH_BASE_DIRECTORY }}Elasticsearch/Config/"
  register: result


- name: Print out the result of the init command
  debug:
    var: result


- name: Fetch the certs
  fetch:
    src: "{{ ELASTICSEARCH_BASE_DIRECTORY }}Elasticsearch/Config/Certs/{{ item }}"
    flat: true
    dest: $PWD/roles/Elasticsearch_Cluster_Deployment_Dockerized/files/
  with_items:
    - "certs.zip"
    - "ca.zip"
    - "http_ca.crt"
    - "http.p12"
    - "transport.p12"
    - "instances.yaml"


- name: Removing the container for generating certs
  docker_container:
    name: "elastic_cert_generator"
    state: absent

